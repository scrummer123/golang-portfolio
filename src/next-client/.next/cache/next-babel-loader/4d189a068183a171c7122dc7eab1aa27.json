{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/simon/Development/go/src/github.com/scrummer123/golang-portfolio/src/next-client/Components/UserForm/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { TryCatchHandler } from \"../../Handlers\";\nimport { Flex, Box, Heading, FormControl, FormLabel, Input, Button, useToast } from \"@chakra-ui/core\"; //\n// LoginHeader: text to inform user about what to do\n//\n\nvar LoginHeader = function LoginHeader(_ref) {\n  var type = _ref.type;\n  return __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    as: \"h3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, type === \"login\" ? \"Log in\" : \"Registreer\", \" met uw gegevens\"));\n}; //\n// LoginForm: fields to let the user login\n//\n\n\n_c = LoginHeader;\n\nvar LoginForm = function LoginForm(_ref2) {\n  _s();\n\n  var type = _ref2.type;\n\n  var _useState = useState(null),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(null),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var TCHandler = new TryCatchHandler();\n  var toast = useToast();\n\n  var HandleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var requestOptions, data, toastConfig, response, error;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(username !== null && password !== null)) {\n                _context.next = 28;\n                break;\n              }\n\n              requestOptions = {\n                method: \"POST\",\n                body: JSON.stringify({\n                  Username: username,\n                  Password: password\n                })\n              };\n              data = TCHandler.Data;\n              toastConfig = {\n                title: null,\n                description: null\n              };\n              _context.prev = 4;\n              _context.next = 7;\n              return fetch(\"http://127.0.0.1:8080/api/auth/\".concat(type === \"login\" ? type : \"register\"), requestOptions);\n\n            case 7:\n              response = _context.sent;\n              _context.next = 10;\n              return response.json();\n\n            case 10:\n              data.response.data = _context.sent;\n              data.response.status = response.status;\n              error = TCHandler.handleData(data);\n\n              if (!(typeof error !== \"undefined\")) {\n                _context.next = 15;\n                break;\n              }\n\n              throw error;\n\n            case 15:\n              toastConfig = {\n                title: \"Gelukt\",\n                description: \"Je bent nu \".concat(type === \"login\" ? \"ingelogd\" : \"geregistreed\")\n              };\n              _context.next = 23;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](4);\n              data.error.status = true;\n              data.error.message = _context.t0;\n              toastConfig = {\n                title: \"Foutmelding\",\n                description: _context.t0.message\n              };\n\n            case 23:\n              _context.prev = 23;\n              console.log(data.error.status);\n              TCHandler.Data = data;\n              toast(_objectSpread(_objectSpread({\n                position: \"top-left\",\n                status: data.error.status === true ? \"error\" : \"success\",\n                duration: 7000\n              }, toastConfig), {}, {\n                isClosable: true\n              }));\n              return _context.finish(23);\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 18, 23, 28]]);\n    }));\n\n    return function HandleSubmit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Box, {\n    mt: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, __jsx(FormLabel, {\n    my: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Gebruikersnaam\"), __jsx(Input, {\n    type: \"text\",\n    placeholder: \"Voer je gebruikersnaam in\",\n    onInput: function onInput(e) {\n      return setUsername(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), __jsx(FormControl, {\n    mt: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(FormLabel, {\n    my: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Wachtwoord\"), __jsx(Input, {\n    type: \"password\",\n    placeholder: \"Voer je wachtwoord in\",\n    onInput: function onInput(e) {\n      return setPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    width: \"full\",\n    variantColor: \"green\",\n    mt: 6,\n    onClick: function onClick() {\n      return HandleSubmit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Inloggen\"));\n}; //\n// Login: main component\n//\n\n\n_s(LoginForm, \"JuJyR6qjbuncEqFgRgVkxPum4JQ=\", false, function () {\n  return [useToast];\n});\n\n_c2 = LoginForm;\n\nvar UserForm = function UserForm(_ref4) {\n  var type = _ref4.type;\n  return __jsx(Flex, {\n    height: \"100vh\",\n    width: \"full\",\n    direction: \"column\",\n    align: \"center\",\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    flex: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    flex: [3, 4, 7],\n    d: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    borderWidth: 1,\n    px: \"8\",\n    py: \"12\",\n    mx: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, __jsx(LoginHeader, {\n    type: type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }), \" \", __jsx(LoginForm, {\n    type: type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 49\n    }\n  }))));\n};\n\n_c3 = UserForm;\nexport default UserForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginHeader\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"UserForm\");","map":{"version":3,"sources":["/home/simon/Development/go/src/github.com/scrummer123/golang-portfolio/src/next-client/Components/UserForm/index.tsx"],"names":["React","useState","TryCatchHandler","Flex","Box","Heading","FormControl","FormLabel","Input","Button","useToast","LoginHeader","type","LoginForm","username","setUsername","password","setPassword","TCHandler","toast","HandleSubmit","requestOptions","method","body","JSON","stringify","Username","Password","data","Data","toastConfig","title","description","fetch","response","json","status","error","handleData","message","console","log","position","duration","isClosable","e","target","value","UserForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    TryCatchHandler,\n    TryCatchInterface,\n    TryCatchDataInterface,\n} from \"../../Handlers\";\nimport {\n    Flex,\n    Box,\n    Heading,\n    FormControl,\n    FormLabel,\n    Input,\n    Button,\n    useToast,\n} from \"@chakra-ui/core\";\n\n//\n// LoginHeader: text to inform user about what to do\n//\n\nconst LoginHeader: React.FC<{ type: string }> = ({ type }) => {\n    return (\n        <Box>\n            <Heading as=\"h3\">\n                {type === \"login\" ? \"Log in\" : \"Registreer\"} met uw gegevens\n            </Heading>\n        </Box>\n    );\n};\n\n//\n// LoginForm: fields to let the user login\n//\n\nconst LoginForm: React.FC<{ type: string }> = ({ type }) => {\n    const [username, setUsername] = useState<string | null>(null);\n    const [password, setPassword] = useState<string | null>(null);\n\n    const TCHandler: TryCatchInterface = new TryCatchHandler();\n    const toast: any = useToast();\n\n    const HandleSubmit: VoidFunction = async () => {\n        if (username !== null && password !== null) {\n            const requestOptions = {\n                method: \"POST\",\n                body: JSON.stringify({\n                    Username: username,\n                    Password: password,\n                }),\n            };\n\n            let data: TryCatchDataInterface = TCHandler.Data;\n            let toastConfig: object = {\n                title: null,\n                description: null,\n            };\n\n            try {\n                const response: any = await fetch(\n                    `http://127.0.0.1:8080/api/auth/${\n                        type === \"login\" ? type : \"register\"\n                    }`,\n                    requestOptions\n                );\n\n                data.response.data = await response.json();\n                data.response.status = response.status;\n\n                const error: Error | void = TCHandler.handleData(data);\n                if (typeof error !== \"undefined\") throw error;\n\n                toastConfig = {\n                    title: \"Gelukt\",\n                    description: `Je bent nu ${\n                        type === \"login\" ? \"ingelogd\" : \"geregistreed\"\n                    }`,\n                };\n            } catch (e) {\n                data.error.status = true;\n                data.error.message = e;\n                toastConfig = {\n                    title: \"Foutmelding\",\n                    description: e.message,\n                };\n            } finally {\n                console.log(data.error.status);\n                TCHandler.Data = data;\n                toast({\n                    position: \"top-left\",\n                    status: data.error.status === true ? \"error\" : \"success\",\n                    duration: 7000,\n                    ...toastConfig,\n                    isClosable: true,\n                });\n            }\n        }\n    };\n\n    return (\n        <Box mt=\"8\">\n            <FormControl>\n                <FormLabel my={1}>Gebruikersnaam</FormLabel>\n                <Input\n                    type=\"text\"\n                    placeholder=\"Voer je gebruikersnaam in\"\n                    onInput={(e: any) => setUsername(e.target.value)}\n                />\n            </FormControl>\n            <FormControl mt={4}>\n                <FormLabel my={1}>Wachtwoord</FormLabel>\n                <Input\n                    type=\"password\"\n                    placeholder=\"Voer je wachtwoord in\"\n                    onInput={(e: any) => setPassword(e.target.value)}\n                />\n            </FormControl>\n            <Button\n                width=\"full\"\n                variantColor=\"green\"\n                mt={6}\n                onClick={() => HandleSubmit()}\n            >\n                Inloggen\n            </Button>\n        </Box>\n    );\n};\n\n//\n// Login: main component\n//\n\nconst UserForm: React.FC<{ type: string }> = ({ type }) => {\n    return (\n        <Flex\n            height=\"100vh\"\n            width=\"full\"\n            direction=\"column\"\n            align=\"center\"\n            justify=\"center\"\n        >\n            <Box flex=\"1\" />\n            <Box\n                flex={[3, 4, 7]}\n                d=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Box borderWidth={1} px=\"8\" py=\"12\" mx={4}>\n                    <LoginHeader type={type} /> <LoginForm type={type} />\n                </Box>\n            </Box>\n        </Flex>\n    );\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}