{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/simon/Development/go/src/github.com/scrummer123/golang-portfolio/src/next-client/Handlers/ColorModeProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useColorMode } from \"@chakra-ui/core\";\nimport React, { createContext, useContext } from \"react\";\nvar ColorModeContext = createContext(\"light\");\n\nvar ColorModeProvider = function ColorModeProvider(props) {\n  _s();\n\n  var children = props.children;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode,\n      toggleColorMode = _useColorMode.toggleColorMode;\n\n  return __jsx(ColorModeContext.Provider, {\n    value: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n_s(ColorModeProvider, \"uURyIwMgIfFLStF4nJMrxbb6o/4=\", false, function () {\n  return [useColorMode];\n});\n\n_c = ColorModeProvider;\n\nvar useDarkMode = function useDarkMode() {\n  _s2();\n\n  return useContext(ColorModeContext);\n};\n\n_s2(useDarkMode, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { ColorModeProvider, useDarkMode };\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorModeProvider\");","map":{"version":3,"sources":["/home/simon/Development/go/src/github.com/scrummer123/golang-portfolio/src/next-client/Handlers/ColorModeProvider.tsx"],"names":["useColorMode","React","createContext","useContext","ColorModeContext","ColorModeProvider","props","children","colorMode","toggleColorMode","useDarkMode"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,iBAA7B;AAEA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,IAAMC,gBAAgB,GAAGF,aAAa,CAAmB,OAAnB,CAAtC;;AAOA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAkB;AAAA;;AAAA,MAChCC,QADgC,GACnBD,KADmB,CAChCC,QADgC;;AAAA,sBAGDP,YAAY,EAHX;AAAA,MAGhCQ,SAHgC,iBAGhCA,SAHgC;AAAA,MAGrBC,eAHqB,iBAGrBA,eAHqB;;AAKxC,SACI,MAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QADL,CADJ;AAKH,CAVD;;GAAMF,iB;UAGqCL,Y;;;KAHrCK,iB;;AAYN,IAAMK,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA,SAAMP,UAAU,CAACC,gBAAD,CAAhB;AAAA,CAApB;;IAAMM,W;;AAEN,SAASL,iBAAT,EAA4BK,WAA5B","sourcesContent":["import { useColorMode } from \"@chakra-ui/core\";\n\nimport React, { createContext, useContext } from \"react\";\n\nconst ColorModeContext = createContext<\"light\" | \"dark\">(\"light\");\n\nexport interface ProviderProps {\n    children: React.ReactNode;\n    value: \"dark\" | \"light\";\n}\n\nconst ColorModeProvider = (props: Props) => {\n    const { children } = props;\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    return (\n        <ColorModeContext.Provider value=\"dark\">\n            {children}\n        </ColorModeContext.Provider>\n    );\n};\n\nconst useDarkMode = () => useContext(ColorModeContext);\n\nexport { ColorModeProvider, useDarkMode };\n"]},"metadata":{},"sourceType":"module"}