{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/simon/Development/go/src/github.com/scrummer123/golang-portfolio/src/next-client/Providers/DarkModeProvider.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createContext, useEffect } from \"react\";\nimport { useColorMode } from \"@chakra-ui/core\";\nexport var DarkModeContext = createContext(undefined);\nexport var DarkModeProvider = function DarkModeProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode,\n      toggleColorMode = _useColorMode.toggleColorMode;\n\n  var providerValue = [colorMode, toggleColorMode];\n  useEffect(function () {\n    console.log(colorMode);\n  }, [colorMode]);\n  return __jsx(DarkModeContext.Provider, {\n    value: providerValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n_s(DarkModeProvider, \"dp+kW0rotmrIKn2GHWegL1lVniY=\", false, function () {\n  return [useColorMode];\n});\n\n_c = DarkModeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"sources":["/home/simon/Development/go/src/github.com/scrummer123/golang-portfolio/src/next-client/Providers/DarkModeProvider.tsx"],"names":["React","createContext","useEffect","useColorMode","DarkModeContext","undefined","DarkModeProvider","children","colorMode","toggleColorMode","providerValue","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,IAAMC,eAAe,GAAGH,aAAa,CAAyBI,SAAzB,CAArC;AAEP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,sBACPJ,YAAY,EADL;AAAA,MACtCK,SADsC,iBACtCA,SADsC;AAAA,MAC3BC,eAD2B,iBAC3BA,eAD2B;;AAG9C,MAAMC,aAAyB,GAAG,CAACF,SAAD,EAAYC,eAAZ,CAAlC;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACH,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,SACI,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEE,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QADL,CADJ;AAKH,CAdM;;GAAMD,gB;UAC8BH,Y;;;KAD9BG,gB","sourcesContent":["import React, { createContext, useEffect } from \"react\";\n\nimport { useColorMode } from \"@chakra-ui/core\";\n\nexport const DarkModeContext = createContext<Array<any> | undefined>(undefined);\n\nexport const DarkModeProvider = ({ children }) => {\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    const providerValue: Array<any> = [colorMode, toggleColorMode];\n\n    useEffect(() => {\n        console.log(colorMode);\n    }, [colorMode]);\n\n    return (\n        <DarkModeContext.Provider value={providerValue}>\n            {children}\n        </DarkModeContext.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}