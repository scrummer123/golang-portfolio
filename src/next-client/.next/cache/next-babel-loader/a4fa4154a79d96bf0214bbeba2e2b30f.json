{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n//\n// When api returns 404, data.message = api error\n// When api returns a 200 status, data.User = api User (from firebase database) (the user is found and authenticated)\n//\n// message = readable user error\nexport var Handler = /*#__PURE__*/function () {\n  function Handler() {\n    _classCallCheck(this, Handler);\n\n    _defineProperty(this, \"Data\", {\n      error: {\n        status: false,\n        message: undefined\n      },\n      response: {\n        data: undefined,\n        message: undefined,\n        status: undefined\n      }\n    });\n  }\n\n  _createClass(Handler, [{\n    key: \"handleData\",\n    value: function handleData(data) {\n      this.Data = data;\n\n      if (data.response.data !== undefined && data.response.status !== undefined) {\n        if (data.response.data.message !== undefined) {\n          this.Data.response.message = data.response.data.message;\n          if (data.response.status === 404 || data.response.status === 401) return new Error(this.Data.response.message);\n          return new Error(\"Geen omschrijving voor deze foutmelding\");\n        }\n\n        if (data.response.status === 200) return;\n      }\n\n      return new Error(\"Geen connectie met de database\");\n    }\n  }]);\n\n  return Handler;\n}();","map":{"version":3,"sources":["/home/simon/Development/go/src/github.com/scrummer123/golang-portfolio/src/next-client/Handlers/Errors/TryCatchHandler.ts"],"names":["Handler","error","status","message","undefined","response","data","Data","Error"],"mappings":";;;AASA;AACA;AACA;AACA;AAYA;AAeA,WAAaA,OAAb;AAAA;AAAA;;AAAA,kCAC+B;AAC3BC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,OAAO,EAAEC;AAA1B,OADoB;AAE3BC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAEF,SADE;AAERD,QAAAA,OAAO,EAAEC,SAFD;AAGRF,QAAAA,MAAM,EAAEE;AAHA;AAFiB,KAD/B;AAAA;;AAAA;AAAA;AAAA,+BAUoBE,IAVpB,EAUuD;AACnD,WAAKC,IAAL,GAAYD,IAAZ;;AAEA,UACEA,IAAI,CAACD,QAAL,CAAcC,IAAd,KAAuBF,SAAvB,IACAE,IAAI,CAACD,QAAL,CAAcH,MAAd,KAAyBE,SAF3B,EAGE;AACA,YAAIE,IAAI,CAACD,QAAL,CAAcC,IAAd,CAAmBH,OAAnB,KAA+BC,SAAnC,EAA8C;AAC5C,eAAKG,IAAL,CAAUF,QAAV,CAAmBF,OAAnB,GAA6BG,IAAI,CAACD,QAAL,CAAcC,IAAd,CAAmBH,OAAhD;AAEA,cAAIG,IAAI,CAACD,QAAL,CAAcH,MAAd,KAAyB,GAAzB,IAAgCI,IAAI,CAACD,QAAL,CAAcH,MAAd,KAAyB,GAA7D,EACE,OAAO,IAAIM,KAAJ,CAAU,KAAKD,IAAL,CAAUF,QAAV,CAAmBF,OAA7B,CAAP;AAEF,iBAAO,IAAIK,KAAJ,CAAU,yCAAV,CAAP;AACD;;AACD,YAAIF,IAAI,CAACD,QAAL,CAAcH,MAAd,KAAyB,GAA7B,EAAkC;AACnC;;AAED,aAAO,IAAIM,KAAJ,CAAU,gCAAV,CAAP;AACD;AA7BH;;AAAA;AAAA","sourcesContent":["interface User {\n  id: string;\n  username: string;\n  Post?: {\n    title: string;\n    content: string;\n  };\n}\n\n//\n// When api returns 404, data.message = api error\n// When api returns a 200 status, data.User = api User (from firebase database) (the user is found and authenticated)\n//\ninterface Response {\n  data:\n    | {\n        message?: string;\n        User?: User;\n      }\n    | undefined;\n  message: string | undefined;\n  status: number | undefined;\n}\n\n// message = readable user error\nexport interface DataInterface {\n  error: {\n    status: boolean;\n    message: string | undefined;\n  };\n  response: Response;\n}\n\nexport interface Interface {\n  Data: DataInterface;\n\n  handleData(data: DataInterface): void | Error;\n}\n\nexport class Handler implements Interface {\n  public Data: DataInterface = {\n    error: { status: false, message: undefined },\n    response: {\n      data: undefined,\n      message: undefined,\n      status: undefined,\n    },\n  };\n\n  public handleData(data: DataInterface): void | Error {\n    this.Data = data;\n\n    if (\n      data.response.data !== undefined &&\n      data.response.status !== undefined\n    ) {\n      if (data.response.data.message !== undefined) {\n        this.Data.response.message = data.response.data.message;\n\n        if (data.response.status === 404 || data.response.status === 401)\n          return new Error(this.Data.response.message);\n\n        return new Error(\"Geen omschrijving voor deze foutmelding\");\n      }\n      if (data.response.status === 200) return;\n    }\n\n    return new Error(\"Geen connectie met de database\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}