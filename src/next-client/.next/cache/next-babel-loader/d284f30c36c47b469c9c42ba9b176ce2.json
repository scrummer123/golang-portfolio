{"ast":null,"code":"var _jsxFileName = \"/home/simon/Development/go/src/github.com/scrummer123/golang-portfolio/src/next-client/Components/UserForm/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { TryCatchHandler } from \"../../Handlers\";\nimport { Flex, Box, Heading, FormControl, FormLabel, Input, Button, useToast } from \"@chakra-ui/core\"; //\n// LoginHeader: text to inform user about what to do\n//\n\nconst LoginHeader = ({\n  type\n}) => {\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    as: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, type === \"login\" ? \"Log in\" : \"Registreer\", \" met uw gegevens\"));\n}; //\n// LoginForm: fields to let the user login\n//\n\n\nconst LoginForm = ({\n  type\n}) => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(null);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(null);\n  const TCHandler = new TryCatchHandler();\n  const toast = useToast();\n\n  const HandleSubmit = async () => {\n    if (username !== null && password !== null) {\n      const requestOptions = {\n        method: \"POST\",\n        body: JSON.stringify({\n          Username: username,\n          Password: password\n        })\n      };\n      let data = TCHandler.Data;\n      let toastConfig = {\n        title: null,\n        description: null\n      };\n\n      try {\n        const response = await fetch(`http://127.0.0.1:8080/api/auth/${type === \"login\" ? type : \"register\"}`, requestOptions);\n        data.response.data = await response.json();\n        data.response.status = response.status;\n        const error = TCHandler.handleData(data);\n        if (typeof error !== \"undefined\") throw error;\n        toastConfig = {\n          title: \"Gelukt\",\n          description: `Je bent nu ${type === \"login\" ? \"ingelogd\" : \"geregistreed\"}`\n        };\n      } catch (e) {\n        data.error.status = true;\n        data.error.message = e;\n        toastConfig = {\n          title: \"Foutmelding\",\n          description: e.message\n        };\n      } finally {\n        console.log(data.error.status);\n        TCHandler.Data = data;\n        toast(_objectSpread(_objectSpread({\n          position: \"top-left\",\n          status: data.error.status === true ? \"error\" : \"success\",\n          duration: 7000\n        }, toastConfig), {}, {\n          isClosable: true\n        }));\n      }\n    }\n  };\n\n  return __jsx(Box, {\n    mt: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, __jsx(FormLabel, {\n    my: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Gebruikersnaam\"), __jsx(Input, {\n    type: \"text\",\n    placeholder: \"Voer je gebruikersnaam in\",\n    onInput: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), __jsx(FormControl, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(FormLabel, {\n    my: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Wachtwoord\"), __jsx(Input, {\n    type: \"password\",\n    placeholder: \"Voer je wachtwoord in\",\n    onInput: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    width: \"full\",\n    variantColor: \"green\",\n    mt: 6,\n    onClick: () => HandleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Inloggen\"));\n}; //\n// Login: main component\n//\n\n\nconst UserForm = ({\n  type\n}) => {\n  return __jsx(Flex, {\n    height: \"100vh\",\n    width: \"full\",\n    direction: \"column\",\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    flex: [3, 4, 7],\n    d: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    borderWidth: 1,\n    px: \"8\",\n    py: \"12\",\n    mx: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, __jsx(LoginHeader, {\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }), \" \", __jsx(LoginForm, {\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 49\n    }\n  }))));\n};\n\nexport default UserForm;","map":{"version":3,"sources":["/home/simon/Development/go/src/github.com/scrummer123/golang-portfolio/src/next-client/Components/UserForm/index.tsx"],"names":["React","useState","TryCatchHandler","Flex","Box","Heading","FormControl","FormLabel","Input","Button","useToast","LoginHeader","type","LoginForm","username","setUsername","password","setPassword","TCHandler","toast","HandleSubmit","requestOptions","method","body","JSON","stringify","Username","Password","data","Data","toastConfig","title","description","response","fetch","json","status","error","handleData","e","message","console","log","position","duration","isClosable","target","value","UserForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    TryCatchHandler,\n    TryCatchInterface,\n    TryCatchDataInterface,\n} from \"../../Handlers\";\nimport {\n    Flex,\n    Box,\n    Heading,\n    FormControl,\n    FormLabel,\n    Input,\n    Button,\n    useToast,\n} from \"@chakra-ui/core\";\n\n//\n// LoginHeader: text to inform user about what to do\n//\n\nconst LoginHeader: React.FC<{ type: string }> = ({ type }) => {\n    return (\n        <Box>\n            <Heading as=\"h3\">\n                {type === \"login\" ? \"Log in\" : \"Registreer\"} met uw gegevens\n            </Heading>\n        </Box>\n    );\n};\n\n//\n// LoginForm: fields to let the user login\n//\n\nconst LoginForm: React.FC<{ type: string }> = ({ type }) => {\n    const [username, setUsername] = useState<string | null>(null);\n    const [password, setPassword] = useState<string | null>(null);\n\n    const TCHandler: TryCatchInterface = new TryCatchHandler();\n    const toast: any = useToast();\n\n    const HandleSubmit: VoidFunction = async () => {\n        if (username !== null && password !== null) {\n            const requestOptions = {\n                method: \"POST\",\n                body: JSON.stringify({\n                    Username: username,\n                    Password: password,\n                }),\n            };\n\n            let data: TryCatchDataInterface = TCHandler.Data;\n            let toastConfig: object = {\n                title: null,\n                description: null,\n            };\n\n            try {\n                const response: any = await fetch(\n                    `http://127.0.0.1:8080/api/auth/${\n                        type === \"login\" ? type : \"register\"\n                    }`,\n                    requestOptions\n                );\n\n                data.response.data = await response.json();\n                data.response.status = response.status;\n\n                const error: Error | void = TCHandler.handleData(data);\n                if (typeof error !== \"undefined\") throw error;\n\n                toastConfig = {\n                    title: \"Gelukt\",\n                    description: `Je bent nu ${\n                        type === \"login\" ? \"ingelogd\" : \"geregistreed\"\n                    }`,\n                };\n            } catch (e) {\n                data.error.status = true;\n                data.error.message = e;\n                toastConfig = {\n                    title: \"Foutmelding\",\n                    description: e.message,\n                };\n            } finally {\n                console.log(data.error.status);\n                TCHandler.Data = data;\n                toast({\n                    position: \"top-left\",\n                    status: data.error.status === true ? \"error\" : \"success\",\n                    duration: 7000,\n                    ...toastConfig,\n                    isClosable: true,\n                });\n            }\n        }\n    };\n\n    return (\n        <Box mt=\"8\">\n            <FormControl>\n                <FormLabel my={1}>Gebruikersnaam</FormLabel>\n                <Input\n                    type=\"text\"\n                    placeholder=\"Voer je gebruikersnaam in\"\n                    onInput={(e: any) => setUsername(e.target.value)}\n                />\n            </FormControl>\n            <FormControl mt={4}>\n                <FormLabel my={1}>Wachtwoord</FormLabel>\n                <Input\n                    type=\"password\"\n                    placeholder=\"Voer je wachtwoord in\"\n                    onInput={(e: any) => setPassword(e.target.value)}\n                />\n            </FormControl>\n            <Button\n                width=\"full\"\n                variantColor=\"green\"\n                mt={6}\n                onClick={() => HandleSubmit()}\n            >\n                Inloggen\n            </Button>\n        </Box>\n    );\n};\n\n//\n// Login: main component\n//\n\nconst UserForm: React.FC<{ type: string }> = ({ type }) => {\n    return (\n        <Flex\n            height=\"100vh\"\n            width=\"full\"\n            direction=\"column\"\n            align=\"center\"\n            justify=\"center\"\n        >\n            <Box flex=\"1\" />\n            <Box\n                flex={[3, 4, 7]}\n                d=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Box borderWidth={1} px=\"8\" py=\"12\" mx={4}>\n                    <LoginHeader type={type} /> <LoginForm type={type} />\n                </Box>\n            </Box>\n        </Flex>\n    );\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}